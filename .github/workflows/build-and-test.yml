name: Build and Test

on:
  push:
    branches: [ main, develop, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: 'KeyboardMouseOdometer.sln'
  
jobs:
  build-and-test:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}
      
    - name: Build
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore
      
    - name: Test
      run: dotnet test ${{ env.SOLUTION_FILE }} --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./TestResults --logger trx
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults/
        retention-days: 7
        
    - name: Generate coverage report
      if: success()
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:./TestResults/*/coverage.cobertura.xml -targetdir:./TestResults/CoverageReport -reporttypes:Html
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: coverage-report
        path: TestResults/CoverageReport/
        retention-days: 7

  publish:
    needs: build-and-test
    runs-on: windows-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}
      
    - name: Publish for Windows x64
      run: |
        dotnet publish src/KeyboardMouseOdometer.UI/KeyboardMouseOdometer.UI.csproj `
          -c Release `
          -r win-x64 `
          --self-contained true `
          --output ./publish/win-x64 `
          -p:PublishSingleFile=true `
          -p:IncludeNativeLibrariesForSelfExtract=true `
          -p:DebugType=None `
          -p:DebugSymbols=false
          
    - name: Create ZIP archive
      run: |
        Compress-Archive -Path ./publish/win-x64/* -DestinationPath ./KeyboardMouseOdometer-win-x64.zip
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: KeyboardMouseOdometer-win-x64
        path: KeyboardMouseOdometer-win-x64.zip
        retention-days: 30