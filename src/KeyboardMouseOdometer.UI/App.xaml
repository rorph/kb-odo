<Application x:Class="KeyboardMouseOdometer.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:converters="clr-namespace:KeyboardMouseOdometer.UI.Converters">
    <Application.Resources>
        <!-- Application-wide resources -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Include any external resource dictionaries here -->
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Converters -->
            <converters:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
            <converters:GreaterThanZeroConverter x:Key="GreaterThanZeroConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            
            <!-- Global Styles -->
            <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="0,0,0,10"/>
            </Style>
            
            <Style x:Key="StatValueStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
            
            <Style x:Key="StatLabelStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{DynamicResource StatLabelBrush}"/>
            </Style>
            
            <!-- GroupBox Style -->
            <Style TargetType="GroupBox">
                <Setter Property="BorderBrush" Value="{DynamicResource ContentBorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ContentForegroundBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Margin" Value="5"/>
            </Style>
            
            <!-- CheckBox Style -->
            <Style TargetType="CheckBox">
                <Setter Property="Foreground" Value="{DynamicResource ContentForegroundBrush}"/>
            </Style>
            
            <!-- RadioButton Style -->
            <Style TargetType="RadioButton">
                <Setter Property="Foreground" Value="{DynamicResource ContentForegroundBrush}"/>
            </Style>
            
            <!-- Button Style -->
            <Style TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
                <Setter Property="Padding" Value="10,5"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- TextBox Style -->
            <Style TargetType="TextBox">
                <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                <Setter Property="Padding" Value="5"/>
            </Style>
            
            <!-- TabItem Style -->
            <Style TargetType="TabItem">
                <Setter Property="Foreground" Value="{DynamicResource TabForegroundBrush}"/>
                <Setter Property="Background" Value="{DynamicResource TabBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource TabBorderBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid>
                                <Border Name="Border" 
                                        Background="{DynamicResource TabBackgroundBrush}"
                                        BorderBrush="{DynamicResource TabBorderBrush}"
                                        BorderThickness="1,1,1,0"
                                        Margin="0,0,2,0"
                                        Padding="6,2"
                                        CornerRadius="4,4,0,0">
                                    <ContentPresenter x:Name="ContentSite"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      ContentSource="Header"
                                                      Margin="12,2"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabSelectedBackgroundBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource TabSelectedForegroundBrush}"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
                                    <Setter TargetName="Border" Property="Margin" Value="0,0,2,-1"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabBackgroundBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource TabForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Heatmap Styles -->
            <Style x:Key="TimeRangeRadioButton" TargetType="RadioButton">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Margin" Value="5,0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border x:Name="border" 
                                    Background="#FF3E3E42" 
                                    BorderBrush="#FF555555" 
                                    BorderThickness="1"
                                    CornerRadius="3"
                                    Padding="10,5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#FF007ACC"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#FF007ACC"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#FF4E4E52"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="ModernButton" TargetType="Button">
                <Setter Property="Background" Value="#FF007ACC"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="#FF007ACC"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#FF0087E0"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#FF006BB3"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="KeyButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#FF2D2D30"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="#FF555555"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="11"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="Margin" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.8"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=DataContext.HeatLevel, RelativeSource={RelativeSource Self}, 
                                           Converter={StaticResource GreaterThanZeroConverter}}" 
                                 Value="True">
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <ToolTip>
                                    <StackPanel>
                                        <TextBlock FontWeight="Bold" Text="{Binding DisplayText}"/>
                                        <TextBlock Text="{Binding PressCount, StringFormat='Presses: {0:N0}'}"/>
                                    </StackPanel>
                                </ToolTip>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <!-- System Tray Context Menu Template -->
            <ContextMenu x:Key="AppTaskbarContextMenu">
                <MenuItem Header="Open Dashboard" Click="OpenDashboard_Click"/>
                <MenuItem Header="Show Toolbar" Click="ShowToolbar_Click"/>
                <Separator/>
                <MenuItem Header="Pause Tracking" Click="PauseTracking_Click"/>
                <MenuItem Header="Reset Statistics" Click="ResetStats_Click"/>
                <Separator/>
                <MenuItem Header="Exit" Click="Exit_Click"/>
            </ContextMenu>
        </ResourceDictionary>
    </Application.Resources>
</Application>