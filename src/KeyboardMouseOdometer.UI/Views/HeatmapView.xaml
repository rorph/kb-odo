<UserControl x:Class="KeyboardMouseOdometer.UI.Views.HeatmapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:KeyboardMouseOdometer.UI.Controls"
             xmlns:vm="clr-namespace:KeyboardMouseOdometer.UI.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="1000"
             d:DataContext="{d:DesignInstance Type=vm:HeatmapViewModel}">
    
    <Grid Background="#FF1E1E1E">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" MaxHeight="300"/>
        </Grid.RowDefinitions>
        
        <!-- Time range selector -->
        <Border Grid.Row="0" Background="#FF2D2D30" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Title -->
                <TextBlock Grid.Column="0" Text="Keyboard Heatmap" 
                           Foreground="White" FontSize="16" FontWeight="Bold" 
                           VerticalAlignment="Center" Margin="0,0,20,0"/>
                
                <!-- Time range buttons -->
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <RadioButton x:Name="TodayRadio" Content="Today" 
                                 IsChecked="{Binding Path=SelectedTimeRange, 
                                             Converter={StaticResource EnumBooleanConverter}, 
                                             ConverterParameter=Today}"
                                 Style="{StaticResource TimeRangeRadioButton}"
                                 Command="{Binding ChangeTimeRangeCommand}"
                                 CommandParameter="{x:Static vm:HeatmapTimeRange.Today}"/>
                    
                    <RadioButton x:Name="WeekRadio" Content="This Week" 
                                 IsChecked="{Binding Path=SelectedTimeRange, 
                                             Converter={StaticResource EnumBooleanConverter}, 
                                             ConverterParameter=Week}"
                                 Style="{StaticResource TimeRangeRadioButton}"
                                 Command="{Binding ChangeTimeRangeCommand}"
                                 CommandParameter="{x:Static vm:HeatmapTimeRange.Week}"/>
                    
                    <RadioButton x:Name="MonthRadio" Content="This Month" 
                                 IsChecked="{Binding Path=SelectedTimeRange, 
                                             Converter={StaticResource EnumBooleanConverter}, 
                                             ConverterParameter=Month}"
                                 Style="{StaticResource TimeRangeRadioButton}"
                                 Command="{Binding ChangeTimeRangeCommand}"
                                 CommandParameter="{x:Static vm:HeatmapTimeRange.Month}"/>
                    
                    <RadioButton x:Name="LifetimeRadio" Content="Lifetime" 
                                 IsChecked="{Binding Path=SelectedTimeRange, 
                                             Converter={StaticResource EnumBooleanConverter}, 
                                             ConverterParameter=Lifetime}"
                                 Style="{StaticResource TimeRangeRadioButton}"
                                 Command="{Binding ChangeTimeRangeCommand}"
                                 CommandParameter="{x:Static vm:HeatmapTimeRange.Lifetime}"/>
                </StackPanel>
                
                <!-- Refresh button -->
                <Button Grid.Column="2" Content="â†» Refresh" 
                        Command="{Binding RefreshCommand}"
                        Style="{StaticResource ModernButton}"
                        Padding="10,5" Margin="5,0,0,0"/>
            </Grid>
        </Border>
        
        <!-- Heatmap control -->
        <controls:KeyboardHeatmapControl Grid.Row="1" 
                                          KeyboardLayout="{Binding KeyboardLayout}"
                                          ColorScheme="{Binding ColorScheme}"
                                          DataContext="{Binding}"/>
        
        <!-- Separator -->
        <Border Grid.Row="2" Background="#FF2D2D30" Height="2" Margin="10,5"/>
        
        <!-- Top Keys Table -->
        <GroupBox Grid.Row="3" Header="Most Pressed Keys" Margin="10" 
                  Foreground="White" BorderBrush="#FF3C3C3C">
            <DataGrid ItemsSource="{Binding TopKeys}"
                      AutoGenerateColumns="False"
                      CanUserSortColumns="True"
                      CanUserResizeColumns="True"
                      GridLinesVisibility="Horizontal"
                      HeadersVisibility="Column"
                      Background="#FF1E1E1E"
                      Foreground="White"
                      BorderBrush="#FF3C3C3C"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Disabled">
                <DataGrid.Resources>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#FF2D2D30"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Padding" Value="8,4"/>
                        <Setter Property="BorderBrush" Value="#FF3C3C3C"/>
                        <Setter Property="BorderThickness" Value="0,0,1,1"/>
                    </Style>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF404040"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FF007ACC"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Padding" Value="8,4"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FF007ACC"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Key" Binding="{Binding Key}" Width="*" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Press Count" Binding="{Binding PressCount, StringFormat=N0}" Width="100" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextAlignment" Value="Right"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="%" Binding="{Binding FormattedPercentage}" Width="80" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextAlignment" Value="Right"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        
        <!-- Loading overlay -->
        <Border Grid.Row="1" Background="#CC000000" 
                Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <ProgressBar IsIndeterminate="True" Width="200" Height="4" Foreground="#FF007ACC"/>
                <TextBlock Text="Loading heatmap data..." Foreground="White" Margin="0,10,0,0"/>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>